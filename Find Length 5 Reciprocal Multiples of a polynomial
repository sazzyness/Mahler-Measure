# Working in integer polynomial ring, with variable z
R.<z> = PolynomialRing(ZZ)

def FindL5RecipPolys(p):
    # Find cyclotomic factors of p
    p2 = p.subs(z=-z)
    p3 = p.subs(z=z^2)
    p4 = p.subs(z=-z^2)
    p5 = gcd(p, p2*p3*p4)
    # Remove cyclotomic factors of p, leaving the non-cyclotomic irreducible
    min_p = p/p5

    # Find house of p
    g = p.roots(CC)
    size = len(g)
    house = 0

    for i in range(size):
        new = abs(g[i][0])
        if new > house:
            house = new

    # Compute upper bounds for d_1 and d_2
    max_d1 = floor(log(5-1)/log(house))
    max_d2 = floor((log(5-1-1)-log(abs(house - 1)))/log(house))

    # Loop over d_i's and e_i's
    for d1 in range(max_d1):
        for d2 in range(max_d2 +1):
            n = 2*(d1+1) + 2*d2
            for e1 in [-1, 1]:
                for e2 in [-1, 1]:
                    # Compute polynomial
                    s(z) = z^n + e1*z^(n-d1-1) + e2*z^(n-d1-1-d2) + e1*z^(n-d1-1-2*d2) + 1
                    # If it is a multiple of the irreducible, return polynomial
                    if gcd(min_p(z), s(z)) != 1:
                        print(s(z))
    print('program end')  
